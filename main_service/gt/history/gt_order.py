# -*- coding: utf-8 -*-
from pymongo import Connection
from dbClient.dateutil import DateUtil
import datetime
from dbClient.db_client import DBCli
from sql.gt_sqlHandlers import gt_new_order_sql
import time
import requests


def mongo_his():
    conn = Connection('221.235.53.169', 27017)
    db = conn["gtgj"]
    coll = db["sub_order"]
    coll_order = db["order"]
    # coll_order_his = db["order_history"]
    # start_date = DateUtil.date2str(DateUtil.getDateBeforeDays(1), '%Y%m%d')
    # end_date = DateUtil.date2str(DateUtil.getDateBeforeDays(0), '%Y%m%d')
    start_date = datetime.date(2016, 7, 11)

    last_date = datetime.date(2013, 6, 6)

    while start_date >= last_date:
        end_date = DateUtil.add_days(start_date, 1)
        tmp_start_date = int(DateUtil.date2str(start_date, "%Y%m%d"))
        tmp_end_date = int(DateUtil.date2str(end_date, "%Y%m%d"))

        query_data_total = coll.aggregate([
            {"$match": {"order_date": {"$gte": tmp_start_date, "$lt": tmp_end_date},
                        "status": {"$nin": [u'取消订单', u'取消改签']}
                        }},
            {"$group": {"_id": "$order_date",
                        "gmv": {"$sum": "$price"}, "ticket_num": {"$sum": 1}}
             }
        ])
        query_data_total_order = coll_order.find({"i_status": {"$nin": ["2"]}, "order_date": tmp_start_date}).count()

        query_data_ios = coll.aggregate([
            {"$match": {"order_date": {"$gte": tmp_start_date, "$lt": tmp_end_date}, "platform": "ios",
                        "status": {"$nin": [u'取消订单', u'取消改签']}}},
            {"$group": {"_id": "$order_date",
                        "gmv": {"$sum": "$price"}, "ticket_num": {"$sum": 1}}
             }
        ])

        query_data_ios_order = coll_order.find({"i_status": {"$nin": ["2"]}, "order_date": tmp_start_date, "platform": "ios"}).count()

        query_data_android = coll.aggregate([
            {"$match": {"order_date": {"$gte": tmp_start_date, "$lt": tmp_end_date}, "platform": "android",
                        "status": {"$nin": [u'取消订单', u'取消改签']}}},
            {"$group": {"_id": "$order_date",
                        "gmv": {"$sum": "$price"}, "ticket_num": {"$sum": 1}}
             }
        ])
        query_data_android_order = coll_order.find({"i_status": {"$nin": ["2"]}, "order_date": tmp_start_date,
                                                     "platform": "android"}).count()

        result = (query_data_total["result"])
        result_ios = (query_data_ios["result"])
        result_android = (query_data_android["result"])

        if len(result) <= 0: result = [{"order_num": [], "_id": [], "gmv": 0, "ticket_num": 0}]
        if len(result_ios) <= 0: result_ios = [{"order_num": [], "_id": [], "gmv": 0, "ticket_num": 0}]
        if len(result_android) <= 0: result_android = [{"order_num": [], "_id": [], "gmv": 0, "ticket_num": 0}]

        for i in xrange(len(result)):
            tmp_result = result[i]
            tmp_result_ios = result_ios[i]
            tmp_result_android = result_android[i]

            s_day = str(tmp_result["_id"])
            tmp_tuple = (s_day[0:4] + "-" + s_day[4:6] + "-" + s_day[6:],
                         tmp_result["ticket_num"], query_data_total_order, tmp_result["gmv"],
                         tmp_result_ios["ticket_num"], query_data_ios_order, tmp_result_ios["gmv"],
                         tmp_result_android["ticket_num"], query_data_android_order,
                         tmp_result_android["gmv"]
                         )

            print tmp_tuple
            DBCli().targetdb_cli.insert(gt_new_order_sql["update_gtgj_new_order_daily"], tmp_tuple)

        start_date = DateUtil.add_days(start_date, -1)


def mysql_his():
    start_date = DateUtil.date2str(datetime.date(2016, 7, 11))
    end_date = DateUtil.date2str(datetime.date(2016, 7, 12))
    dto = []
    for i in xrange(6):
        dto.append(start_date)
        dto.append(end_date)

    query_data = DBCli().gt_cli.queryAll(gt_new_order_sql["gt_neworder_daily"], dto)
    print query_data
    # DBCli().targetdb_cli.batchInsert(gt_new_order_sql["update_gtgj_new_order_daily"], query_data)


def query_gt():

    uids = [
1215805947403328,
1215822597570176,
1215847151557824,
1215878379703040,
1215884555942592,
1215890015248960,
1215891664955392,
1215901610184192,
1215906391990464,
1215916773137728,
1215924357292672,
1215930045485952,
1215938810298688,
1215940036002880,
1215943790509888,
1215955475690624,
1215967356421248,
1215977022614720,
1215988504566016,
1216010445834496,
1216044511125056,
1216046835556608,
1216063407261824,
1216072713900928,
1216095668979456,
1216101654839424,
1216117144724352,
1216126602382144,
1216127254570368,
1216134040558592,
1216142819513664,
1216152337972672,
1216160565496576,
1216217752739520,
1216228618417088,
1216238516950976,
1216240180982656,
1216256166160256,
1216267940006976,
1216276084810304,
1216276642850432,
1216283472428224,
1216287353944832,
1216294594497664,
1216294917229184,
1216331590860160,
1216371506122048,
1216392786383360,
1216447675157888,
1216454722182528,
1216464306471552,
1216532969394432,
1216537315121728,
1216560916286080,
1216615047590208,
1216630053405376,
1216637759545472,
1216638327259648,
1216659419766208,
1216665768607936,
1216703368697536,
1216715386959872,
1216723029194688,
1216773739220544,
1216787586798336,
1216819458616960,
1216836494669184,
1216841981192448,
1216852297782336,
1216853959652160,
1216912482751744,
1216942008652352,
1216958133561280,
1216962789157632,
1217000299579648,
1217002705633088,
1217014588964800,
1217031431536704,
1217062025209728,
1217066321839232,
1217089067050048,
1217113930604672,
1217124377365184,
1217147987206272,
1217202190745472,
1217204937919104,
1217212080336128,
1217239200047296,
1217279786225536,
1217284698183616,
1217316421918848,
1217356880440256,
1217420145938880,
1217424218713472,
1217433477148544,
1217436527366016,
1217442302182528,
1217532243992128,
1217555447092608,
1217570776402112,
1217571869196096,
1217588898408576,
1217626325408384,
1217631521527936,
1217635828611456,
1217678066493312,
1217680276059776,
1217681538376768,
1217687545299200,
1217693252991424,
1217713138883648,
1217730322555136,
1217752288403008,
1217753516112320,
1217797503984384,
1217824716461632,
1217830054913344,
1217836873434368,
1217849182956032,
1217858804542528,
1217865582282368,
1217909311854336,
1217941367824192,
1217941598874304,
1217942675385280,
1217959417437760,
1217968264010432,
1218028483889728,
1218028927182208,
1218036104019008,
1218052817981056,
1218095793896896,
1218096570342144,
1218112071759232,
1218117718536960,
1218117998600768,
1218131721248256,
1218133248347776,
1218142418599424,
1218146359854912,
1218164667041472,
1218175114564480,
1218201745745344,
1218217564295744,
1218246371177728,
1218249959908096,
1218251603561664,
1218258239739520,
1218272241414592,
1218285221756800,
1218288971876480,
1218305247809984,
1218305895586752,
1218313142909312,
1218316727814656,
1218327689832960,
1218340649864768,
1218422033071168,
1218430567726208,
1218438602138752,
1218439968670976,
1218454172418176,
1218488805639361,
1218502142018241,
1218511455676225,
1218538476699201,
1218565528312513,
1218565808456385,
1218608928987969,
1218633812963456,
1218636699860161,
1218645617783105,
1218655196499584,
1218755062816961,
1218760451798849,
1218766113409536,
1218787805863296,
1218832449154241,
1218925026068096,
1219084611256320,
1219147118227649,
1219203044091904,
1219241584919745,
1219287652984769,
1219297965527680,
1219523427092161,
1219656303744512,
1219670929687233,
1219684224377281,
1219693150288449,
1219704188659712,
1497641568110784,
1497658867767488,
1779118534853952,
1779120390642112,
22649376764018688,
22653644110725120,
22655760433479680,
22671325643309056,
22683264115818496,
22688310704799744,
22690321809801216,
22692578288091136,
22716040932802560,
22719335576043520,
22722237606920192,
22727782844563456,
22727836704096256,
22728840711045120,
22729396454014976,
22730174584799232,
22732908995428352,
22733490212585472,
22734192383983616,
22735809503084544,
22737215191318528,
22740034614902784,
22741940135788544,
22742283567628288,
22745445471584256,
22749030525779968,
22750489916538880,
22752102589808640,
22754048406405120,
22754823306362880,
22755634524323840,
22755718598082560,
22755748490444800,
22756224066797568,
22756955041071105,
22757154568011776,
22757431450812416,
22757627332886528,
22757699074834432,
22758862409809920,
22760510067621888,
22761240726077440,
2344625833680000,
2907566739020737,
2907582435725377,
2907594037383873,
2907645138322688,
2907672531718849,
2907697635561025,
2907708517641984,
2907720233298625,
2907746700225792,
2907893818577985,
2907930074709632,
2907937882812672,
2907958054514560,
2907965256172672,
2907985195275520,
2908014957872896,
2908068539197184,
2908072816994176,
2908083837128448,
2908101439038401,
2908152881629889,
2908179350791233,
2908231054905856,
2908235111709568,
3468501426162752,
3468513308382912,
3468519728876864,
370399899337344,
370405208223168,
370409723426560,
370421893728896,
370431379390720,
370451549092608,
370462922385984,
370471113042752,
370486986089536,
370513306074816,
370520740812288,
370537377111808,
370541234921280,
370547741087808,
370567694911552,
370568299350464,
370588618866944,
370606741364864,
370615016437952,
370622869820480,
370641450901824,
370696190983808,
370713808545280,
370723964896768,
370724746431488,
370735735980416,
370806246080768,
370807997918144,
370827736411264,
370829495612992,
370835549376512,
370836255523392,
370844787731328,
370896119337472,
370900117479488,
370924636076480,
370969174764160,
370994919994752,
371011491565824,
371024536661824,
371067045690496,
371067644870208,
371072332675648,
371095289696576,
371101110713536,
371134500087040,
371138125245696,
371143262364352,
371144001786560,
371167600751936,
371228922024832,
371232421136384,
371245413898944,
371276626195776,
371288579514688,
371292927673792,
371294129948096,
371310235119040,
371315045717760,
371334041657792,
371355466590848,
371392313712832,
371392517040832,
3749998918089792,
3750005537796160,
375224840309569,
375226843108224,
375235471241921,
651885815333184,
651943560904832,
651951452704064,
651957075262656,
651957396591616,
651979073900928,
651997421110144,
652000478619328,
652000977006656,
652010326687680,
652017185558912,
652028645648448,
652045755293696,
652066207028672,
652078825545024,
652095883316608,
652096100693376,
652101037251264,
652101119153600,
652117847294016,
652162546688448,
652165645368960,
652212247960640,
652245166375232,
652248105213120,
652249259388608,
652269528392128,
652282023975488,
652287044780416,
652309603980992,
652333853010048,
652339075658752,
652358462589376,
652385521139840,
652414950895296,
652421766384768,
652425071190464,
652435838489728,
652491621143936,
652549174339008,
652566175135104,
652669516566336,
652674458842432,
652683978415488,
652691705296896,
652691757723904,
652702684921920,
652712271184000,
652718342307712,
652742547533952,
652758869397824,
652759526341760,
652775756956352,
652785538332800,
652786861815104,
652789236460800,
652800244710464,
652814977645504,
652818127697728,
652818439802560,
652844881738112,
652844929187584,
656518581917505,
656617957897153,
656654729443009,
934436935935360,
934470693449856,
934482126782336,
934492767705216,
934507175463360,
934520372323328,
934530587061952,
934530650145600,
934539234913728,
934558713418880,
934560412011392,
934569046373056,
934581366114624,
934586636984128,
934591416408064,
934594265277376,
934598151207616,
934626993225664,
934637069956224,
934638128068224,
934641881338880,
934668089196928,
934675564732544,
934680427282880,
934686127673216,
934686803207488,
934691122307904,
934713823763456,
934729620159424,
934733965276352,
934743180659776,
934745183759040,
934760177257664,
934786408214976,
934807618932480,
934808791841728,
934819105927104,
934825111041856,
934842187065344,
934842783385472,
934846361424576,
934883816250368,
934884840860352,
934892812467648,
934903092937472,
934919789494272,
934936024996992,
934980939035776,
934994407342720,
935006005422656,
935006901196992,
935052518353152,
935057598127552,
935079730576832,
935093767228992,
935102300080960,
935102883168320,
935128128213312,
935130023805568,
935133149220608,
935167650879616,
935168823699968,
935235113876096,
935260413826560,
935281817190592,
935298791000896,
935299339181696,
935317237133824,
935328756846656,
935337742165184,
935344814515904,
935355637013632,
935378245513408,
935398688694592,
935416880528000,
935432736196736,
935453381550592,
935483489429120,
935513967817408,
935552883320256,
935561411879872,
935572063659584,
935597794315840,
935598511107008,
935609832618560,
935652851333568,
935665192065408,
935691383128832,
935693022761344,
935718461281920,
935858369843904,
935899209701184,
935946907775104,
935962227737344,
935965407542336,
936003309825728,
936003438601280,
936025571507072,
936030988578368,
936064810075520,
936067094201728,
936106987453376,
936178571604864,
936206549335424,
936230364311424,
936239564895808,
936278852940288,
936278997707776,
936279957441152,
936284982270144,
936285695581952,
936297460382592,
936318100312832,
936321372207680,
936335783368768,
936339371819648,
936344285486464,
936362467372352,
936371655904128,
936376510872448,
936380014033216,
936384318840704,
936385354799168,
936388824637120,
936391026809728,
936394207775232,
936410201224000,
936455829297600,
936483167090368,
936485761820416,
936496187757632,
936516490325888,
936532534024512,
936538967783872,
936555479077184,
936576606910144,
936608111056704,
936628649350912,
936631819200192,
936632238084608,
936632855290752,
936653163284672,
936654885830848,
936660010019712,
936704050135232,
936714189086656,
936770131254912,
936770301255168,
936795056157056,
936810540983872,
936816206896768,
936823279387008,
936825760518400,
936832976102400,
936880905923200,
936889769097344,
936904239612352,
936932765718528,
936960803354752,
936963276241664,
936977240958208,
936983029571456,
937042222673664,
937042268419777,
937090136525312,
937097426896065,
937108321000448,
937110108935040,
937115169809601,
937143135834561,
937145931079233,
937157096071361,
937158349976192,
937159136467840,
937164669116672,
937278945432448,
937407674979584,
937615795910016,
937686986010049,
937972434140160,
938184698643584,
938202009305344,
1216007470729856,
1216166183763328,
1216240180982656,
1216249093222720,
1216272665165248,
1216541583037568,
1216638327259648,
1216846788973312,
1216923815906816,
1217000899112064,
1217222570006144,
1217310945770624,
1217438848183168,
1217492700591872,
1217497979337088,
1217571869196096,
1217588463859968,
1217785584672192,
1218042383647296,
1218052817981056,
1218261324619776,
1218638687797569,
1218932941240320,
1219169548020417,
1219341554041216,
22594334379442176,
22635662980562944,
22635687474970624,
22641303202660352,
22649376764018688,
22659490240872448,
22690321809801216,
22707801477726208,
22713090767994880,
22731774626988032,
22737680339304448,
22748699556528128,
2907683114512833,
2908055944849408,
2908074186367809,
370628965273856,
371375904427520,
375303541894912,
651873136494528,
651984202027456,
652000379090624,
652045755293696,
652178602433600,
652282023975488,
652354670766656,
652532814401664,
652745818057472,
934455715926208,
934470287816000,
934579035091968,
934590348544384,
934604437122560,
934697518724864,
934781256093504,
934842358573568,
934883816250368,
934966967590464,
935082509095808,
935084461813760,
935151746120768,
935194161352960,
935284085691328,
935288709650688,
935328836366848,
935819859606400,
935823879569920,
936078468891008,
936189756668032,
936195662066368,
936317992951168,
936322665677440,
936361317166592,
936380137294400,
936394729808256,
936517783314496,
936654885830848,
936662003099264,
936742396101504,
936749891893888,
936795056157056,
936939563647360,
936971128213825,
937122852736768,
937134825052737,
937159407084865,
937163306540481,
937788242050241,
1216030076499776,
1216050227058624,
1217007924471296,
1217233376687552,
1217765685717760,
1218164667041472,
1218550316863872,
1218655196499584,
1218661513409920,
22733145322799104,
22754170362707968,
22755979806998528,
2908273461934464,
370409723426560,
370488286593280,
370614866483968,
370628965273856,
370652782487488,
370658533946688,
652000977006656,
652336370219264,
652547319302848,
652714349706368,
656871491465537,
934738043281984,
935345767132160,
935699500105984,
936284982270144,
936378856587392,
937379182485185,
938359458123585,
1215828073235200,
1216056124153664,
1216061939295424,
1216105882280320,
1216117616081152,
1216148968224000,
1216151188952832,
1216436375378880,
1216641414365312,
1216793077990720,
1217477032089664,
1217571869196096,
1217617179866880,
1217738458002496,
1217760789077568,
1217765685717760,
1217799771138816,
1217813412614784,
1217875681355264,
1218316261517888,
1218322052823936,
1218376727931200,
1218655196499584,
1219137291433921,
1782827688145664,
22654003234603008,
22674755940646912,
22700530211061760,
22715115755700224,
22746159537029120,
22752102589808640,
22752764644671488,
2907611304773504,
2907876464158592,
2907979612369857,
370477611611776,
370891860943168,
371100249697984,
371210306608448,
371310235119040,
652253621800704,
652332477560512,
652690709557824,
652723013903296,
652767289219008,
934441325570816,
934450200708608,
934463027801152,
934879758214400,
934940135371520,
935047032125248,
935079730576832,
935155729683712,
935221056638720,
935472001683648,
936284982270144,
936378108017984,
936420323479232,
936571892513024,
936617827948224,
936770370832576,
936816172748032,
936825027325696,
937009899548609,
937798802100224,
938800369144960,
1215838355067840,
1215871838384768,
1215887053716608,
1215900140777600,
1215901115494016,
1215908880056768,
1215913659566400,
1215933068227584,
1215946581823168,
1215949533243136,
1215950650826496,
1215955431457472,
1215967910860544,
1215977436701440,
1215978492427072,
1215981133734208,
1215988242994560,
1215993510782016,
1215993661885184,
1216006069835328,
1216012889189760,
1216018319640512,
1216035785761792,
1216050227058624,
1216055707029184,
1216056082006720,
1216056124153664,
1216056471063168,
1216068420200256,
1216077319635840,
1216083589152576,
1216088094084352,
1216088211244864,
1216096532536256,
1216099627113472,
1216104663386048,
1216105882280320,
1216111362017664,
1216143489879424,
1216148945722240,
1216148968224000,
1216149595919104,
1216162237703424,
1216166011695936,
1216171412045248,
1216184084389184,
1216189687949248,
1216194459220416,
1216211940219584,
1216216345769152,
1216216807821184,
1216232019648256,
1216240180982656,
1216240418778368,
1216245016231424,
1216249286659264,
1216249355184640,
1216249610484928,
1216259345587520,
1216260787433152,
1216262168316096,
1216292560097792,
1216294594497664,
1216331197359232,
1216341878183488,
1216370111395072,
1216376879747904,
1216400365345344,
1216408437149696,
1216425802663552,
1216427114663616,
1216436265311360,
1216436375378880,
1216458387030016,
1216483276707520,
1216488487979392,
1216525348571840,
1216526169807104,
1216537050808448,
1216537865435136,
1216541583037568,
1216541710643648,
1216613693203840,
1216618724737600,
1216626176581696,
1216632475281792,
1216637330418560,
1216643317094528,
1216643879018944,
1216646291244736,
1216649171988352,
1216657121732736,
1216693729769600,
1216704490383744,
1216743014747072,
1216743911908480,
1216746447769600,
1216752393423808,
1216759317285696,
1216763766289344,
1216768962362624,
1216797368651264,
1216803646805120,
1216834419817664,
1216834720586944,
1216835449372096,
1216835899547712,
1216873749417024,
1216931194078336,
1216931536927360,
1216934150131264,
1216939449864000,
1216942008652352,
1216967921677312,
1216973137500928,
1216973142758528,
1216978685994752,
1216980547877120,
1216992147450048,
1217003279042432,
1217012621969664,
1217013743378112,
1217014593734976,
1217028062146368,
1217041113859136,
1217092388393792,
1217096849001408,
1217107633310912,
1217128368466304,
1217130097768000,
1217135944488192,
1217136971498176,
1217194335513408,
1217210353518464,
1217213101028544,
1217222570006144,
1217238341601984,
1217251328339136,
1217266161244864,
1217272190618304,
1217283515812544,
1217293954706112,
1217295242716096,
1217296222765632,
1217307175935808,
1217316421918848,
1217355496634112,
1217360873257920,
1217361116544704,
1217370912241856,
1217374178550016,
1217383672403456,
1217390471789376,
1217418058709888,
1217433003971584,
1217445494757952,
1217445659505088,
1217454687655808,
1217492700591872,
1217510976518464,
1217564635191168,
1217571869196096,
1217572832472576,
1217582136756224,
1217592321841280,
1217593934419904,
1217605786395776,
1217638519606720,
1217647765969472,
1217675484256256,
1217697004732480,
1217705584122048,
1217720615729024,
1217738458002496,
1217742742526144,
1217782053016896,
1217785391878592,
1217794272332352,
1217798140613888,
1217799012604416,
1217836873434368,
1217841082159360,
1217843152129344,
1217851632878976,
1217865973466112,
1217874744385856,
1217881639965440,
1217887637396288,
1217891101348928,
1217896302090944,
1217898160445440,
1217914712812608,
1217918719955264,
1217951784340736,
1217959456391296,
1217970438976000,
1217973486355904,
1217991195219008,
1217996490400768,
1218006917635712,
1218007219133568,
1218008307263040,
1218013256281344,
1218019513160320,
1218028927182208,
1218035861921344,
1218042383647296,
1218064783631616,
1218070615333888,
1218112219303232,
1218117452736512,
1218124746363904,
1218125466075008,
1218147671820288,
1218151997136384,
1218161386455808,
1218163975403200,
1218164160278336,
1218173229818432,
1218179894205952,
1218186218194944,
1218196475493056,
1218207180456640,
1218207490327360,
1218207907227392,
1218214642004864,
1218219892059904,
1218236445446912,
1218239529953984,
1218240941782208,
1218247505336512,
1218256724151232,
1218258779873408,
1218280487056960,
1218302106992640,
1218311394120192,
1218312088647488,
1218331140285056,
1218340311038400,
1218340649864768,
1218356161233536,
1218360307160448,
1218376727931200,
1218430567726208,
1218440760561792,
1218443829176320,
1218468064399872,
1218483716483584,
1218500182553600,
1218505034347713,
1218509913416576,
1218512542205440,
1218517333147392,
1218522268685440,
1218522738042049,
1218533940561664,
1218538999352513,
1218542687851648,
1218555668987136,
1218560823437568,
1218572082423296,
1218594101624129,
1218596600479872,
1218598678833729,
1218612388953537,
1218621831213056,
1218632667144769,
1218634241553408,
1218638171907456,
1218638687797569,
1218640105807488,
1218645269757824,
1218650391459905,
1218655196499584,
1218665568978816,
1218671041885312,
1218728435795840,
1218766984363136,
1218788310192256,
1218810602919233,
1218837413499713,
1218876168285312,
1218886964200897,
1218902494447425,
1218935296267008,
1218974830947968,
1218990949215425,
1218991238949120,
1218998091208513,
1219052748621761,
1219086201138688,
1219136170000577,
1219137291433921,
1219191031191168,
1219213291866880,
1219230681520449,
1219297965527680,
1219303405612416,
1219506445011200,
1219510640592128,
1219665935315649,
1219693150288449,
1219729540539073,
1219766495572929,
1219870585080001,
1219892427964609,
1219900488542848,
1219938832524544,
1219948578914176,
1219986397021824,
1219986615067201,
1220053016127553,
1220072353443009,
1220170946759296,
1220176202479809,
1220189306012737,
1220191284082304,
1220197791357056,
1220197989506432,
1220197990545664,
1220210151821889,
1220219078072576,
1220219905294592,
1220224098029952,
1220318184049601,
1497647001073728,
1497647839132032,
1497660095035392,
1779117249734400,
1783148336668672,
1783163184575169,
2064384498309569,
2064623220624640,
22659273362472960,
22674995023200256,
22679371436785664,
22682374007308288,
22694649312690176,
22697767752597504,
22699123017809920,
22707801477726208,
22723501945569280,
22724612099096576,
22725081741082624,
22729378102820864,
22730177669431296,
22732167328514048,
22733251508502528,
22733490212585472,
22734216031879168,
22734993491640320,
22735941760385024,
22737190753812480,
22740034614902784,
22743340547948544,
22744037813616640,
22744184154750976,
22744851312443392,
22745515632345088,
22746337889894400,
22749127668547584,
22749930050306048,
22751333711659008,
22751952385474560,
22752953417433088,
22753191876018176,
22753361819189248,
22754047005196288,
22754170362707968,
22755410443108352,
22755527787528192,
22755718598082560,
22756915467763712,
22757428910768128,
22757594996539392,
22760291986210816,
2907527269496576,
2907533913847424,
2907536256251585,
2907609814146176,
2907611304773504,
2907645138322688,
2907686876318401,
2907687092967680,
2907691491884737,
2907708517641984,
2907714184254976,
2907715508941761,
2907720082246272,
2907720356353152,
2907720671462272,
2907724804493440,
2907729953760384,
2907737887273409,
2907738854186624,
2907763109910081,
2907775339298753,
2907797609635777,
2907803899528001,
2907822177181568,
2907837491634176,
2907843640827073,
2907851482993792,
2907867998748288,
2907876672295745,
2907915661697920,
2907929614209664,
2907943239173376,
2907947917546752,
2907957747928192,
2907975743287936,
2907985288558785,
2907990180670273,
2907995668367488,
2908029057958081,
2908047592275009,
2908055944849408,
2908076372628352,
2908092772487296,
2908107179976129,
2908123709556417,
2908125029694785,
2908125456233856,
2908128056637377,
2908141129819201,
2908146024162497,
2908167028957184,
2908180126891776,
2908201125032897,
2908245255894209,
2908245803474753,
2908267988638976,
3468519728876864,
3468520717802560,
370391416497728,
370391680914240,
370399200610496,
370452778694528,
370469529730112,
370474506919168,
370513306074816,
370523906593152,
370530636455360,
370535447793536,
370536126093952,
370536871100928,
370537698283200,
370543979395840,
370553175979072,
370554461007936,
370558133822784,
370563277422976,
370568606724096,
370628965273856,
370651827288128,
370670800227840,
370673517277824,
370673950907904,
370680068478592,
370680146446336,
370690159532224,
370691336226176,
370695975603072,
370709119750400,
370739927705984,
370752609052928,
370784820066496,
370807997918144,
370822440469504,
370829739008576,
370849762645056,
370858796179648,
370888983663872,
370889028713920,
370941498151488,
370962128102784,
370968028180736,
371021673758784,
371049766050880,
371068372814144,
371127630499840,
371134500087040,
371206958325952,
371228922024832,
371242970964416,
371255694432128,
371255927752576,
371267324978816,
371271161636608,
371287108801344,
371294129948096,
371358695399424,
371375904427520,
371376761224256,
371397879678080,
3749985039963136,
3749985176813440,
3749991440192640,
3749994015665280,
3749994976485760,
3750005737423424,
375053373664577,
375069905986881,
375099262740992,
375101859615104,
375185761806913,
375196264378945,
375346939731584,
375348696987457,
375436122542592,
375442088639937,
375450721041408,
375457683434049,
375504214878785,
375567180241601,
375567328216641,
375573313389184,
375573448958080,
375603112373632,
375630115040449,
375680679417409,
375695035251840,
375727216428672,
375773018596929,
375773294443392,
375773310234368,
375773551023425,
375777035463233,
375778859956608,
375779447730625,
375782497605697,
375789712356673,
375793140306753,
375796267996160,
375799346545920,
375898510433152,
651861961727808,
651882336854528,
651884052321856,
651888104492928,
651933667536128,
651935857911552,
651938384090432,
651952182875776,
651957396591616,
652000977006656,
652010326687680,
652012742851392,
652017185558912,
652022008136640,
652027892156928,
652029060797568,
652066207028672,
652087460267904,
652087610132928,
652096100693376,
652133993013952,
652138439350464,
652148164670080,
652161763242048,
652171320179904,
652171794503488,
652176805008256,
652219853936064,
652221187155712,
652237279776832,
652286232894848,
652361803057216,
652366530562112,
652386954117632,
652415006159680,
652419318193600,
652420767621632,
652427259627776,
652432513639232,
652437824703360,
652441430361408,
652446713720960,
652452527073472,
652465013944000,
652492944154368,
652524745377280,
652547319302848,
652552429317824,
652610789816960,
652612255309120,
652617724542848,
652624207235264,
652641951981632,
652675257498752,
652686054848320,
652690201408320,
652690709557824,
652693257588544,
652694016582592,
652702684921920,
652729228969920,
652764690219968,
652800244710464,
652818750272640,
652820060708864,
652823774795712,
652828870748864,
652846960726720,
652857733027264,
652884585137856,
656568335107072,
656606672364865,
656611567572417,
656621955601664,
656777292247873,
656784515035841,
656788682727873,
657031126588288,
657076372798464,
657148625940480,
657157712179905,
657192333860033,
657247916800768,
657247943519169,
657248053088449,
657269671826688,
657271100883905,
657274191458625,
934370315457024,
934371584987520,
934372270841984,
934393635468352,
934403214395392,
934422387470912,
934425120754624,
934427893040832,
934431228039744,
934434410018560,
934436110885952,
934436935935360,
934437157990272,
934443440225984,
934453664996160,
934455015986560,
934459137077952,
934477539408576,
934497324249024,
934497629146880,
934508887885312,
934513271697088,
934525980105152,
934530650145600,
934557923288512,
934581366114624,
934591176915328,
934593097940672,
934610241278784,
934623593566208,
934636235488000,
934640462456704,
934641881338880,
934642456032768,
934652320900864,
934653712735296,
934679974299904,
934680427282880,
934686523509888,
934687383650752,
934690894573952,
934690999055680,
934691659450112,
934698595239552,
934707391548480,
934709413781312,
934719174093440,
934725548056000,
934726524898880,
934734879281216,
934739706532864,
934746320288960,
934753011395200,
934763515853056,
934776285490112,
934781277681664,
934798842768576,
934806103898624,
934812357909184,
934823685539712,
934829902149312,
934830171463808,
934837025340032,
934862129075328,
934881499506048,
934892131760064,
934892373462464,
934928823905856,
934946211552448,
934949784285376,
934952644091008,
934956295169280,
934991377224576,
934996694283648,
935001371344448,
935002766462848,
935018547689472,
935019720278464,
935036542120832,
935038334640192,
935041347761344,
935052019390912,
935104907779264,
935121425632000,
935124299527360,
935135304137984,
935160356751616,
935161565563648,
935216496875072,
935218394548544,
935223184139968,
935256735265792,
935260609568704,
935260895254080,
935265315046016,
935274043858304,
935277654883456,
935287575892544,
935300975946176,
935314787947072,
935316934646080,
935317237133824,
935320116153920,
935322486750656,
935323548339584,
935372688948096,
935398731035776,
935411765575040,
935414513172864,
935432736196736,
935437999752640,
935459793315008,
935469872943360,
935489051464448,
935504958434688,
935527973631680,
935539465130752,
935539660376256,
935552883320256,
935566810659840,
935599779597184,
935608356969024,
935609334632768,
935609586990336,
935637431459776,
935677268685376,
935698961032320,
935700028831360,
935731032359680,
935749828659520,
935774866667840,
935775073301888,
935784717492928,
935804630226240,
935810117542336,
935825487381632,
935851238467072,
935858369843904,
935858857432576,
935875444087488,
935885751599616,
935925287258240,
935947554601152,
935970820323264,
935992540794368,
936024725910976,
936047114424256,
936051803565184,
936075473812480,
936089424126336,
936096814045312,
936101264884544,
936109162542848,
936109185365056,
936169678041344,
936190208281536,
936201324661120,
936202022759360,
936217095372864,
936241056157440,
936243750833024,
936262421294720,
936275080474240,
936277957172672,
936278997707776,
936283783911680,
936297031788288,
936304491989184,
936322665677440,
936322896567936,
936328278855552,
936337802143744,
936343033953088,
936349584784704,
936362763879872,
936374794164800,
936384138327808,
936412827595072,
936428085752384,
936430131239360,
936438138556608,
936443149611456,
936472773563264,
936482208096320,
936490920641408,
936503745162560,
936507194293568,
936507394862912,
936527357629440,
936537487164160,
936537495034496,
936537850450432,
936540406640000,
936548792359040,
936560613238976,
936573484323520,
936577216582848,
936578492856704,
936585052044160,
936593831466688,
936611586103872,
936631098553536,
936631761900864,
936644855436544,
936665509548032,
936670525035648,
936673687098240,
936676642923200,
936702686723264,
936709497853248,
936716767764544,
936720411535424,
936721183373760,
936744396314368,
936753280458048,
936758460939904,
936799693957760,
936807821398720,
936820002263360,
936849996973824,
936861019503360,
936875179564480,
936889769097344,
936893830237376,
936902724456704,
936903587164096,
936931322337728,
936931884706688,
936942463902464,
936958520887680,
936983029571456,
937004581789121,
937019183853633,
937021216480321,
937070660898497,
937074858148929,
937075859086785,
937097480068801,
937108519634432,
937109954143872,
937134825052737,
937147575345857,
937147596435905,
937153603252801,
937158198444737,
937162278240961,
937164573655105,
937167606995521,
937169889869824,
937176327048129,
937179017169152,
937201315360193,
937222951116737,
937276019158593,
937318785072065,
937328245203328,
937351166932289,
937395600933888,
937405159696705,
937445414791040,
937478752159169,
937480466765568,
937585184256640,
937611002072001,
937660197201664,
937671590299329,
937692673660737,
937754876417920,
937755707814593,
937777978072064,
937789721498945,
937832061249345,
937840614246593,
937858738507904,
937995157049409,
938005061043200,
938080722531072,
938087124388992,
938130763491584,
938137197510912,
938148790157952,
938175134320640,
938205633777280,
938215832642560,
938246785631041,
938298626970624,
938336741411265,
938351438011329,
938424763028161,
938452794690944,
938492337246080,
938521183400192,
938578859258945,
938650835404672,
938662094123201,
938662639367040,
938697515148225,
938722816518656,
938723008127937,
938723526376257,
938723580268993,
938727639313857,
938733058114625,
938735267496001,
938735314057665,
938738452362561,
938744006558657,
]

    conn = Connection('221.235.53.169', 27017)
    db = conn["gtgj"]
    coll_order = db["sub_order"]
    # new_uids = [str(uid) for uid in uids]

    start_date = datetime.date(2016, 1, 1)
    end_date = datetime.date(2016, 9, 30)


    sql = """
        select userid, gt_user_name, uid, date_format(create_time, '%%Y/%%m/%%d'), extend_col1,
        real_name, card from account_gtgj where userid = %s
    """
    # q_uids = DBCli().gt_cli.queryAll(sql, dto)

    for uid in uids:
        u_dto = [str(uid)]
        q_u = DBCli().gt_cli.queryOne(sql, u_dto)
        u = list(q_u)

        tmp_start_date = int(DateUtil.date2str(start_date, "%Y%m%d"))
        tmp_end_date = int(DateUtil.date2str(end_date, "%Y%m%d"))
        result = coll_order.find({"uid": u[2], "order_date": {"$gte": tmp_start_date, "$lte": tmp_end_date},
                                  "status": {"$nin": ['取消订单', '已退票']}})

        card = u[6]
        sex = None
        age = None
        if card:
            if len(card) > 15:
                if int(card[16]) % 2 == 0:
                    sex = "female"
                else:
                    sex = "male"

                age = card[6:10]
                age = str(2016 - int(age))

        zgp_amount = 0.0
        zgp_num = 0
        zg_gd_num = 0
        dg_amount = 0.0
        dg_num = 0
        dg_gd_num = 0

        for info in result:
            if card == info["card_no"]:
                zgp_amount += float(info["price"])
                zgp_num += 1
                if info["seat_name"] in [u'一等座', u'商务座', u'特等座', u'软卧', u'一等软座']:
                    zg_gd_num += 1
            elif card != info["card_no"]:
                dg_amount += float(info["price"])
                dg_num += 1
                if info["seat_name"] in [u'一等座', u'商务座', u'特等座', u'软卧', u'一等软座']:
                    dg_gd_num += 1
        u.append(sex)
        u.append(age)
        u.append(zgp_amount)
        u.append(zgp_num)
        u.append(zg_gd_num)
        u.append(dg_amount)
        u.append(dg_num)
        u.append(dg_gd_num)
        u.pop(2)
        print u
        insert_sql = """
            insert into gt_test (uid, phone, create_date, city, real_name, card, sex, age, zgp_amount, zgp_num, zg_gd_num, dg_amount,
            dg_num, dg_gd_num) values (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
        """
        DBCli().targetdb_cli.insert(insert_sql, u)

def get_hb():
    uids = [
10190867,
10269226,
10280332,
1035477,
10379556,
10433302,
10529436,
10595626,
1062264,
10629287,
1074129,
107491,
1077439,
1108450,
11095716,
111014,
11109689,
11156235,
1115639,
11205901,
1121845,
1127461,
11314953,
1132670,
11339404,
11355342,
113980,
114219,
11427287,
1144888,
11488123,
11488542,
11767806,
11770449,
11775089,
11793398,
11814140,
11817616,
11818147,
11818684,
11821369,
11846041,
1196725,
11976800,
12076662,
12138970,
12148803,
121518,
12234619,
12283396,
1230009,
12367774,
1243306,
1245660,
1249734,
12504491,
1261522,
1266524,
1271940,
12819346,
1284411,
1286168,
12915723,
12945640,
12950806,
12954147,
12965198,
12966,
1304655,
13151157,
13450603,
1347757,
13615587,
13679772,
1368092,
13718956,
1371949,
13769428,
13790758,
13808471,
1385284,
13853534,
13855029,
139088,
1391731,
13924699,
1400960,
1401073,
1413368,
14251243,
14301046,
14351271,
1436065,
1436534,
14383172,
14404700,
14468562,
14493552,
14507730,
1451020,
14556726,
146144,
14650428,
14673807,
14674420,
14737734,
14994283,
15020940,
15191275,
15226693,
15310456,
153131,
15320127,
15337413,
15341829,
15424408,
15443362,
15454194,
1549088,
1561751,
15686797,
15710895,
15737570,
15775460,
15776500,
15822453,
15858850,
15873548,
15899436,
15925762,
15974795,
15983437,
16006616,
16079915,
16090727,
1609580,
16133961,
16189363,
16219836,
16253166,
16265416,
16273360,
1634883,
16373508,
16481975,
16486745,
165060,
165071,
16536006,
16539041,
16556465,
1656715,
16586913,
16593689,
16602283,
16629681,
16629984,
16671057,
16671351,
16671654,
16672088,
16672655,
16673750,
16674213,
16677253,
16677921,
16677962,
16683508,
16698468,
16698805,
16706538,
16709733,
16711309,
16722973,
16723747,
16739513,
16755913,
16766775,
16767676,
16774380,
16782248,
16782280,
16784419,
16792327,
16793167,
16799682,
16807508,
16810243,
1696152,
170,
1712173,
175050,
177514,
1782901,
178947,
180481,
181964,
1844912,
1861105,
1864302,
1870,
187932,
188383,
1903418,
1904995,
195251,
1999952,
2022,
2024647,
206024,
2060919,
2061286,
20999,
2103032,
2110365,
2126724,
2130764,
2144449,
2156765,
2173813,
2195343,
21957,
2230149,
2236207,
2255361,
2318432,
231909,
242075,
242717,
242916,
24326,
244598,
245590,
2485885,
253298,
25395,
2577490,
258353,
26,
2603480,
260702,
261466,
2622673,
262272,
2628863,
265557,
275404,
276607,
2796062,
2841273,
296598,
2976562,
2993054,
303254,
303948,
306314,
30732,
3149272,
321986,
32211,
325526,
3302753,
334112,
3381823,
3523570,
357584,
3623456,
365398,
366518,
381980,
382800,
3837496,
385376,
3854943,
3863137,
3864499,
386685,
3889128,
3913326,
392765,
393539,
396026,
3972179,
398606,
399269,
401795,
40306,
4033241,
403406,
4045684,
4046579,
4052797,
407635,
4131338,
418494,
4187159,
424328,
444221,
449076,
4535507,
4554708,
4556849,
46190,
4687585,
4718190,
472084,
4737837,
476422,
476479,
484604,
4849948,
4931,
4936,
4961867,
4975006,
5085462,
510741,
511933,
5128919,
512929,
5153229,
51567,
5223198,
5229583,
5255963,
530049,
540217,
5403949,
5408141,
541170,
543790,
5440442,
548504,
5555990,
558173,
559370,
5602891,
560551,
5668917,
5702468,
5779791,
5800846,
5863673,
5864554,
5940048,
6060805,
60712,
6124698,
6146013,
619422,
6195872,
6211053,
6299883,
6383723,
6395698,
6408834,
6419881,
6426991,
652329,
653936,
65411,
6568074,
6622395,
6625738,
667545,
6687542,
670180,
6878554,
6893530,
6926204,
6932391,
693908,
697912,
7027926,
7034849,
7069846,
7123883,
7125618,
7315270,
7344079,
73944,
7421501,
742496,
7440110,
7451527,
7459516,
7468601,
7483525,
748376,
7484945,
7551054,
760941,
7640655,
7915367,
7927407,
8001383,
8039828,
8131409,
8178573,
8192612,
8297587,
8299443,
838648,
8397797,
8401538,
843322,
8717233,
8772836,
8786654,
886336,
89011,
898137,
9128,
915290,
918915,
9199595,
9239188,
9332578,
9341662,
9378503,
9476218,
9493823,
954980,
9558,
9694111,
9717008,
9860278,
9901560,
996644,
10012514,
1010505,
10114566,
1105168,
11128111,
11205901,
11529240,
11566637,
116210,
11662718,
1168201,
117470,
11765165,
11818147,
11996219,
12137768,
1232044,
12505948,
12562560,
13109282,
13221024,
13459554,
13511908,
1360079,
13665151,
13720549,
1385284,
13916284,
139496,
14111687,
1419,
14208005,
14320013,
14333587,
14410006,
14679418,
15110476,
1525461,
15357454,
15483766,
15698572,
1570343,
15754265,
1580838,
15809836,
15810093,
1584737,
16174069,
16288129,
1636981,
16482022,
16485054,
16583738,
16654700,
16767676,
16955271,
16964770,
16999522,
17014476,
17149387,
17170481,
17178439,
17434326,
1746235,
17546381,
17557359,
1755782,
17774956,
17810605,
17879634,
17895097,
17932110,
17944278,
17967984,
18011362,
18171586,
18210898,
18346107,
1834763,
1834850,
18484090,
18487474,
18640897,
18685972,
18697606,
18716711,
18736896,
18784590,
18796583,
18819932,
1904995,
195316,
19877,
2022,
208224,
217947,
2384857,
2486137,
26,
2622364,
262272,
2691998,
271444,
2792328,
285727,
2929942,
3186526,
3336653,
3384404,
343738,
3476400,
3504469,
3523570,
3620277,
365910,
378971,
381980,
3854943,
3866341,
388788,
398487,
4119093,
4177221,
433083,
4583460,
463639,
4692321,
4847334,
4963330,
514214,
5314691,
5375525,
541170,
544423,
5717806,
5768489,
5795557,
6000351,
6030453,
6285234,
6649779,
6674060,
669998,
670180,
6797155,
7042324,
72815,
7333701,
73944,
7513144,
7746490,
7751096,
7933079,
8045499,
8066336,
8125370,
8212998,
8268565,
8385395,
8405513,
8513084,
8862414,
8887562,
8901130,
905557,
9117650,
9138234,
9438887,
96886,
10129416,
10336166,
1115639,
11801169,
11870508,
12144777,
1280397,
13,
13109282,
135359,
13718956,
13924699,
139496,
14,
14002110,
14162400,
14180788,
1555381,
1556359,
15775460,
15904538,
16402301,
16487686,
16583025,
16625813,
16856227,
16935842,
170,
17016337,
17777253,
18086,
1853944,
19,
19419,
1992949,
2022,
212260,
2287203,
24326,
2449703,
2581824,
26,
2961141,
2973035,
36,
370586,
38541,
396026,
4058695,
4098474,
4236683,
4441303,
4494346,
465398,
4931,
4936,
509678,
5230377,
53,
5440442,
5512973,
5560893,
596964,
6402624,
6593914,
6700130,
670177,
6980300,
7027926,
7034849,
73944,
7483525,
7746490,
8420853,
874,
8817844,
9117650,
930630,
9493823,
950385,
4975006,
12137768,
13026870,
13926888,
1438273,
16482022,
16767676,
1904995,
2206384,
25023,
3854943,
5440442,
6627265,
7722250,
8322570,
8635696,
9493823,
10034219,
11778681,
12110429,
13026870,
15593264,
16438049,
16482022,
17149387,
2454561,
3186526,
4167970,
5637544,
6000351,
751314,
8192107,
]

    # new_uids = [str(u) for u in uids]
    # sql = """
    #     select uc.phoneid, pu.phone, pu.name, date_format(createtime, '%%Y/%%m/%%d'), uc.id_number from phone_user pu
    #     left join USED_CREDENTIAL uc on pu.phoneid=uc.phoneid
    #     where pu.phoneid in %s
    # """

    sql = """
        select pu.phoneid, pu.phone, pu.name, date_format(createtime, '%%Y/%%m/%%d')
        from phone_user pu
        where pu.phoneid = %s
    """

    card_sql = """
        select id_number from USED_CREDENTIAL where phoneid = %s
    """

    order_sql = """
        select orderid from TICKET_ORDER
        where createtime>='2016-01-01 00:00:00'
        and createtime <= '2016-09-30 00:00:00'
        and ORDERSTATUE not in (2,12,21,51,75)
        and phoneid = %s
    """

    ticket_sql = """
        select outpayprice, passengeridcardno, BASECABIN from TICKET_ORDERDETAIL
        where orderid in %s
    """

    insert_sql = """
        insert into hb_test (uid, phone, real_name, create_date, card, age, sex, city, zgp_amount, zgp_num, zg_gd_num, dg_amount,
        dg_num, dg_gd_num) values (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
    """

    for u in uids:
        dto = [str(u)]
        query_data = DBCli().sourcedb_cli.queryOne(sql, dto)

        result = []

        req_params = {
            "appkey": "10003",
            "sign": "b59bc3ef6191eb9f747dd4e83c99f2a4",
            "format": "json",
            "app": "phone.get"
        }
        url = "http://api.k780.com:88/"

        zgp_amount = 0.0
        zgp_num = 0
        zg_gd_num = 0
        dg_amount = 0.0
        dg_num = 0
        dg_gd_num = 0
        sex = None
        age = None
        card = None
        phone_city = None
        if query_data:
            query_data = list(query_data)
            phoneid = query_data[0]

            card_dto = [phoneid]
            card = DBCli().sourcedb_cli.queryOne(card_sql, card_dto)

            phone = query_data[1]

            req_params["phone"] = phone
            phone_info = requests.get(url, params=req_params)

            phone_city = phone_info.json()

            if phone_city.get("result"):
                phone_city = (phone_city["result"]).get("att", None)
            else:
                phone_city = None
            sex = None
            age = None

            if not card:
                card = None
            else:
                card = card[0]

                if len(card) > 15:
                    if int(card[16]) % 2 == 0:
                        sex = "female"
                    else:
                        sex = "male"

                    age = card[6:10]
                    age = str(2016 - int(age))

            order_dto = [phoneid]
            order = DBCli().sourcedb_cli.queryAll(order_sql, order_dto)
            if order:
                # continue
                order = list(order)
                # order = [o[0] for o in order]
                ticket_dto = [order]
                ticket = DBCli().sourcedb_cli.queryAll(ticket_sql, ticket_dto)

                for t in ticket:
                    amount = t[0]
                    cardno = t[1]
                    basecabin = t[2]
                    if card == cardno:
                        zgp_amount += float(amount)
                        zgp_num += 1
                        if basecabin in ["F", "P", "C", "J"]:
                            zg_gd_num += 1
                    elif card != cardno:
                        dg_amount += float(amount)
                        dg_num += 1
                        if basecabin in ["F", "P", "C", "J"]:
                            dg_gd_num += 1
        else:
            query_data = [str(u), None, None]
        query_data.append(card)
        query_data.append(age)
        query_data.append(sex)
        query_data.append(phone_city)
        query_data.append(zgp_amount)
        query_data.append(zgp_num)
        query_data.append(zg_gd_num)
        query_data.append(dg_amount)
        query_data.append(dg_num)
        query_data.append(dg_gd_num)
        # result.append(query_data)

        DBCli().targetdb_cli.insert(insert_sql, query_data)


def update_hb_city():
    sql = """
        select uid, phone from hb_test where city is null
    """
    update_sql = """
        update hb_test set city=%s where uid=%s
    """
    phone = DBCli().targetdb_cli.queryAll(sql)
    # req_params = {
    #     "appkey": "10003",
    #     "sign": "b59bc3ef6191eb9f747dd4e83c99f2a4",
    #     "format": "json",
    #     "app": "phone.get"
    # }
    # url = "http://api.k780.com:88/"
    url = "http://cx.shouji.360.cn/phonearea.php"
    req_params = {}
    for p in phone:
        uid = p[0]
        phone = p[1]
        req_params["number"] = phone
        phone_info = requests.get(url, params=req_params)

        phone_city = phone_info.json()
        print phone_city
        if phone_city.get("code") == 0:
            phone_city = (phone_city["data"]).get("province", None) + "," + (phone_city["data"]).get("city", None)
        else:
            phone_city = None

        update_dto = [phone_city, uid]
        DBCli().targetdb_cli.insert(update_sql, update_dto)


if __name__ == "__main__":
    # mysql_his()
    # mongo_his()
    query_gt()
    # get_hb()
    # update_hb_city()